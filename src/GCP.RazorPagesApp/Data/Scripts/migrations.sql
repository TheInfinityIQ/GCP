CREATE TABLE IF NOT EXISTS __ef_migrations_history (
    migration_id character varying(150) NOT NULL,
    product_version character varying(32) NOT NULL,
    CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
);

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220201193802_InitialCreate') THEN
    CREATE TABLE "Game" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        "GameLink" text NULL,
        "Score" integer NOT NULL,
        "User" text NULL,
        CONSTRAINT "PK_Game" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220201193802_InitialCreate') THEN
    INSERT INTO __ef_migrations_history (migration_id, product_version)
    VALUES ('20220201193802_InitialCreate', '6.0.1');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220201230426_UpdateNamingConvention') THEN
    ALTER TABLE "Game" DROP CONSTRAINT "PK_Game";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220201230426_UpdateNamingConvention') THEN
    ALTER TABLE "Game" RENAME TO game;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220201230426_UpdateNamingConvention') THEN
    ALTER TABLE game RENAME COLUMN "User" TO "user";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220201230426_UpdateNamingConvention') THEN
    ALTER TABLE game RENAME COLUMN "Score" TO score;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220201230426_UpdateNamingConvention') THEN
    ALTER TABLE game RENAME COLUMN "Id" TO id;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220201230426_UpdateNamingConvention') THEN
    ALTER TABLE game RENAME COLUMN "GameLink" TO game_link;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220201230426_UpdateNamingConvention') THEN
    ALTER TABLE game ADD CONSTRAINT pk_game PRIMARY KEY (id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220201230426_UpdateNamingConvention') THEN
    INSERT INTO __ef_migrations_history (migration_id, product_version)
    VALUES ('20220201230426_UpdateNamingConvention', '6.0.1');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220202201406_AddIdentity') THEN
    CREATE TABLE role (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        name character varying(256) NULL,
        normalized_name character varying(256) NULL,
        concurrency_stamp text NULL,
        CONSTRAINT pk_role PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220202201406_AddIdentity') THEN
    CREATE TABLE "user" (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        display_name character varying(30) NULL,
        user_name character varying(256) NULL,
        normalized_user_name character varying(256) NULL,
        email character varying(256) NULL,
        normalized_email character varying(256) NULL,
        email_confirmed boolean NOT NULL,
        password_hash text NULL,
        security_stamp text NULL,
        concurrency_stamp text NULL,
        phone_number text NULL,
        phone_number_confirmed boolean NOT NULL,
        two_factor_enabled boolean NOT NULL,
        lockout_end timestamp with time zone NULL,
        lockout_enabled boolean NOT NULL,
        access_failed_count integer NOT NULL,
        CONSTRAINT pk_user PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220202201406_AddIdentity') THEN
    CREATE TABLE role_claim (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        role_id integer NOT NULL,
        claim_type text NULL,
        claim_value text NULL,
        CONSTRAINT pk_role_claim PRIMARY KEY (id),
        CONSTRAINT fk_role_claim_asp_net_roles_role_id FOREIGN KEY (role_id) REFERENCES role (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220202201406_AddIdentity') THEN
    CREATE TABLE user_claim (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        user_id integer NOT NULL,
        claim_type text NULL,
        claim_value text NULL,
        CONSTRAINT pk_user_claim PRIMARY KEY (id),
        CONSTRAINT fk_user_claim_asp_net_users_user_id FOREIGN KEY (user_id) REFERENCES "user" (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220202201406_AddIdentity') THEN
    CREATE TABLE user_login (
        login_provider text NOT NULL,
        provider_key text NOT NULL,
        provider_display_name text NULL,
        user_id integer NOT NULL,
        CONSTRAINT pk_user_login PRIMARY KEY (login_provider, provider_key),
        CONSTRAINT fk_user_login_user_user_id FOREIGN KEY (user_id) REFERENCES "user" (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220202201406_AddIdentity') THEN
    CREATE TABLE user_role (
        user_id integer NOT NULL,
        role_id integer NOT NULL,
        CONSTRAINT pk_user_role PRIMARY KEY (user_id, role_id),
        CONSTRAINT fk_user_role_role_role_id FOREIGN KEY (role_id) REFERENCES role (id) ON DELETE CASCADE,
        CONSTRAINT fk_user_role_user_user_id FOREIGN KEY (user_id) REFERENCES "user" (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220202201406_AddIdentity') THEN
    CREATE TABLE user_token (
        user_id integer NOT NULL,
        login_provider text NOT NULL,
        name text NOT NULL,
        value text NULL,
        CONSTRAINT pk_user_token PRIMARY KEY (user_id, login_provider, name),
        CONSTRAINT fk_user_token_user_user_id FOREIGN KEY (user_id) REFERENCES "user" (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220202201406_AddIdentity') THEN
    CREATE UNIQUE INDEX "RoleNameIndex" ON role (normalized_name);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220202201406_AddIdentity') THEN
    CREATE INDEX ix_role_claim_role_id ON role_claim (role_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220202201406_AddIdentity') THEN
    CREATE INDEX "EmailIndex" ON "user" (normalized_email);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220202201406_AddIdentity') THEN
    CREATE UNIQUE INDEX "UserNameIndex" ON "user" (normalized_user_name);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220202201406_AddIdentity') THEN
    CREATE INDEX ix_user_claim_user_id ON user_claim (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220202201406_AddIdentity') THEN
    CREATE INDEX ix_user_login_user_id ON user_login (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220202201406_AddIdentity') THEN
    CREATE INDEX ix_user_role_role_id ON user_role (role_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220202201406_AddIdentity') THEN
    INSERT INTO __ef_migrations_history (migration_id, product_version)
    VALUES ('20220202201406_AddIdentity', '6.0.1');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    ALTER TABLE game DROP COLUMN game_link;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    ALTER TABLE game DROP COLUMN "user";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    ALTER TABLE game RENAME COLUMN score TO max_players;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE TYPE link_type AS ENUM ('unknown', 'article', 'store', 'image', 'video');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    ALTER TABLE game ADD normalized_title text NOT NULL DEFAULT '';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    ALTER TABLE game ADD release_date date NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    ALTER TABLE game ADD supports_online_play boolean NOT NULL DEFAULT FALSE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    ALTER TABLE game ADD title text NOT NULL DEFAULT '';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE TABLE game_endorsement (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        game_id integer NOT NULL,
        user_id integer NOT NULL,
        weight double precision NOT NULL,
        CONSTRAINT pk_game_endorsement PRIMARY KEY (id),
        CONSTRAINT fk_game_endorsement_game_game_id FOREIGN KEY (game_id) REFERENCES game (id) ON DELETE CASCADE,
        CONSTRAINT fk_game_endorsement_users_user_id FOREIGN KEY (user_id) REFERENCES "user" (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE TABLE game_link (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        game_id integer NOT NULL,
        label text NULL,
        type integer NOT NULL,
        link text NOT NULL,
        CONSTRAINT pk_game_link PRIMARY KEY (id),
        CONSTRAINT fk_game_link_game_game_id FOREIGN KEY (game_id) REFERENCES game (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE TABLE genre (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        name text NOT NULL,
        normalized_name text NOT NULL,
        CONSTRAINT pk_genre PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE TABLE platform (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        name text NOT NULL,
        normalized_name text NOT NULL,
        CONSTRAINT pk_platform PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE TABLE publisher (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        name text NOT NULL,
        normalized_name text NOT NULL,
        CONSTRAINT pk_publisher PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE TABLE retailer (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        name text NOT NULL,
        normalized_name text NOT NULL,
        CONSTRAINT pk_retailer PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE TABLE game_genre (
        game_id integer NOT NULL,
        genre_id integer NOT NULL,
        CONSTRAINT pk_game_genre PRIMARY KEY (game_id, genre_id),
        CONSTRAINT fk_game_genre_game_game_id FOREIGN KEY (game_id) REFERENCES game (id),
        CONSTRAINT fk_game_genre_genre_genre_id FOREIGN KEY (genre_id) REFERENCES genre (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE TABLE game_publisher (
        game_id integer NOT NULL,
        publisher_id integer NOT NULL,
        CONSTRAINT pk_game_publisher PRIMARY KEY (game_id, publisher_id),
        CONSTRAINT fk_game_publisher_game_game_id FOREIGN KEY (game_id) REFERENCES game (id),
        CONSTRAINT fk_game_publisher_publisher_publisher_id FOREIGN KEY (publisher_id) REFERENCES publisher (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE TABLE game_retailer (
        game_id integer NOT NULL,
        retailer_id integer NOT NULL,
        CONSTRAINT pk_game_retailer PRIMARY KEY (game_id, retailer_id),
        CONSTRAINT fk_game_retailer_game_game_id FOREIGN KEY (game_id) REFERENCES game (id),
        CONSTRAINT fk_game_retailer_retailer_retailer_id FOREIGN KEY (retailer_id) REFERENCES retailer (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE TABLE game_publisher_platform (
        game_id integer NOT NULL,
        publisher_id integer NOT NULL,
        platform_id integer NOT NULL,
        CONSTRAINT pk_game_publisher_platform PRIMARY KEY (game_id, publisher_id, platform_id),
        CONSTRAINT fk_game_publisher_platform_game_game_id FOREIGN KEY (game_id) REFERENCES game (id) ON DELETE CASCADE,
        CONSTRAINT fk_game_publisher_platform_game_publisher_game_publisher_temp_ FOREIGN KEY (game_id, publisher_id) REFERENCES game_publisher (game_id, publisher_id),
        CONSTRAINT fk_game_publisher_platform_platform_platform_id FOREIGN KEY (platform_id) REFERENCES platform (id)
    );
    END IF;
END $EF$;
COMMIT;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE UNIQUE INDEX CONCURRENTLY ix_game_normalized_title ON game (normalized_title);
    END IF;
END $EF$;
START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE INDEX ix_game_endorsement_game_id ON game_endorsement (game_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE INDEX ix_game_endorsement_user_id ON game_endorsement (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE INDEX ix_game_genre_genre_id ON game_genre (genre_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE INDEX ix_game_link_game_id ON game_link (game_id);
    END IF;
END $EF$;
COMMIT;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE UNIQUE INDEX CONCURRENTLY ix_game_link_link ON game_link (link);
    END IF;
END $EF$;
START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE INDEX ix_game_publisher_publisher_id ON game_publisher (publisher_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE INDEX ix_game_publisher_platform_platform_id ON game_publisher_platform (platform_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE INDEX ix_game_retailer_retailer_id ON game_retailer (retailer_id);
    END IF;
END $EF$;
COMMIT;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE UNIQUE INDEX CONCURRENTLY ix_genre_normalized_name ON genre (normalized_name);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE UNIQUE INDEX CONCURRENTLY ix_platform_normalized_name ON platform (normalized_name);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE UNIQUE INDEX CONCURRENTLY ix_publisher_normalized_name ON publisher (normalized_name);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    CREATE UNIQUE INDEX CONCURRENTLY ix_retailer_normalized_name ON retailer (normalized_name);
    END IF;
END $EF$;
START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM __ef_migrations_history WHERE "migration_id" = '20220207002032_ExpandGameEntity') THEN
    INSERT INTO __ef_migrations_history (migration_id, product_version)
    VALUES ('20220207002032_ExpandGameEntity', '6.0.1');
    END IF;
END $EF$;
COMMIT;

